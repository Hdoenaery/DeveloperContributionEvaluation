digraph "checkAutoType" {  
"3934" [label = <(&lt;operator&gt;.assignment,int safeModeMask = Feature.SafeMode.mask)<SUB>1325</SUB>> ]
"3941" [label = <(&lt;operator&gt;.assignment,boolean this.safeMode = this.safeMode || (featu...)<SUB>1326</SUB>> ]
"3979" [label = <(&lt;operator&gt;.assignment,int mask = Feature.SupportAutoType.mask)<SUB>1333</SUB>> ]
"3986" [label = <(&lt;operator&gt;.assignment,boolean this.autoTypeSupport = this.autoTypeSup...)<SUB>1334</SUB>> ]
"4097" [label = <(&lt;operator&gt;.assignment,String className = typeName.replace('$', '.'))<SUB>1364</SUB>> ]
"4105" [label = <(&lt;operator&gt;.assignment,long h1 = (fnv1a_64_magic_hashcode ^ className....)<SUB>1367</SUB>> ]
"4158" [label = <(&lt;operator&gt;.assignment,long h3 = (((((fnv1a_64_magic_hashcode ^ classN...)<SUB>1376</SUB>> ]
"4180" [label = <(&lt;operator&gt;.assignment,long fullHash = TypeUtils.fnv1a_64(className))<SUB>1383</SUB>> ]
"4186" [label = <(&lt;operator&gt;.assignment,boolean internalWhite = Arrays.binarySearch(INT...)<SUB>1384</SUB>> ]
"4348" [label = <(&lt;operator&gt;.assignment,clazz = TypeUtils.getClassFromMapping(typeName))<SUB>1418</SUB>> ]
"4580" [label = <(&lt;operator&gt;.assignment,boolean jsonType = false)<SUB>1479</SUB>> ]
"4584" [label = <(&lt;operator&gt;.assignment,InputStream is = null)<SUB>1480</SUB>> ]
"4849" [label = <(RETURN,return clazz;,return clazz;)<SUB>1551</SUB>> ]
"3889" [label = <(&lt;operator&gt;.equals,typeName == null)<SUB>1312</SUB>> ]
"3896" [label = <(&lt;operator&gt;.notEquals,autoTypeCheckHandlers != null)<SUB>1316</SUB>> ]
"3936" [label = <(&lt;operator&gt;.fieldAccess,Feature.SafeMode.mask)<SUB>1325</SUB>> ]
"3942" [label = <(&lt;operator&gt;.fieldAccess,this.safeMode)<SUB>1326</SUB>> ]
"3945" [label = <(&lt;operator&gt;.logicalOr,this.safeMode || (features &amp; safeModeMask) != 0...)<SUB>1326</SUB>> ]
"3962" [label = <(&lt;operator&gt;.fieldAccess,this.safeMode)<SUB>1329</SUB>> ]
"3981" [label = <(&lt;operator&gt;.fieldAccess,Feature.SupportAutoType.mask)<SUB>1333</SUB>> ]
"3987" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1334</SUB>> ]
"3990" [label = <(&lt;operator&gt;.logicalOr,this.autoTypeSupport || (features &amp; mask) != 0 ...)<SUB>1334</SUB>> ]
"4007" [label = <(&lt;operator&gt;.logicalOr,typeName.length() &gt;= 192 || typeName.length() &lt; 3)<SUB>1338</SUB>> ]
"4031" [label = <(&lt;operator&gt;.equals,expectClass == null)<SUB>1343</SUB>> ]
"4099" [label = <(replace,typeName.replace('$', '.'))<SUB>1364</SUB>> ]
"4107" [label = <(&lt;operator&gt;.multiplication,(fnv1a_64_magic_hashcode ^ className.charAt(0))...)<SUB>1367</SUB>> ]
"4115" [label = <(&lt;operator&gt;.equals,h1 == 0xaf64164c86024f1aL)<SUB>1368</SUB>> ]
"4132" [label = <(&lt;operator&gt;.equals,(h1 ^ className.charAt(className.length() - 1))...)<SUB>1372</SUB>> ]
"4160" [label = <(&lt;operator&gt;.multiplication,(((((fnv1a_64_magic_hashcode ^ className.charAt...)<SUB>1376</SUB>> ]
"4182" [label = <(fnv1a_64,fnv1a_64(className))<SUB>1383</SUB>> ]
"4188" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODE...)<SUB>1384</SUB>> ]
"4197" [label = <(&lt;operator&gt;.notEquals,internalDenyHashCodes != null)<SUB>1386</SUB>> ]
"4250" [label = <(&lt;operator&gt;.logicalAnd,(!internalWhite) &amp;&amp; (autoTypeSupport || expectC...)<SUB>1397</SUB>> ]
"4350" [label = <(getClassFromMapping,getClassFromMapping(typeName))<SUB>1418</SUB>> ]
"4354" [label = <(&lt;operator&gt;.equals,clazz == null)<SUB>1420</SUB>> ]
"4366" [label = <(&lt;operator&gt;.logicalAnd,expectClass == null &amp;&amp; clazz != null &amp;&amp; Throwab...)<SUB>1424</SUB>> ]
"4389" [label = <(&lt;operator&gt;.equals,clazz == null)<SUB>1428</SUB>> ]
"4401" [label = <(IDENTIFIER,internalWhite,if (internalWhite))<SUB>1432</SUB>> ]
"4413" [label = <(&lt;operator&gt;.notEquals,clazz != null)<SUB>1436</SUB>> ]
"4459" [label = <(&lt;operator&gt;.logicalNot,!autoTypeSupport)<SUB>1447</SUB>> ]
"4658" [label = <(&lt;operator&gt;.logicalOr,autoTypeSupport || jsonType || expectClassFlag)<SUB>1500</SUB>> ]
"4684" [label = <(&lt;operator&gt;.notEquals,clazz != null)<SUB>1505</SUB>> ]
"4807" [label = <(&lt;operator&gt;.logicalNot,!autoTypeSupport)<SUB>1537</SUB>> ]
"4836" [label = <(&lt;operator&gt;.notEquals,clazz != null)<SUB>1545</SUB>> ]
"3893" [label = <(RETURN,return null;,return null;)<SUB>1313</SUB>> ]
"3897" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeCheckHandlers)<SUB>1316</SUB>> ]
"3903" [label = <(&lt;operator&gt;.assignment,)<SUB>1317</SUB>> ]
"3937" [label = <(&lt;operator&gt;.fieldAccess,Feature.SafeMode)<SUB>1325</SUB>> ]
"3940" [label = <(FIELD_IDENTIFIER,mask,mask)<SUB>1325</SUB>> ]
"3944" [label = <(FIELD_IDENTIFIER,safeMode,safeMode)<SUB>1326</SUB>> ]
"3946" [label = <(&lt;operator&gt;.logicalOr,this.safeMode || (features &amp; safeModeMask) != 0)<SUB>1326</SUB>> ]
"3954" [label = <(&lt;operator&gt;.notEquals,(JSON.DEFAULT_PARSER_FEATURE &amp; safeModeMask) != 0)<SUB>1328</SUB>> ]
"3964" [label = <(FIELD_IDENTIFIER,safeMode,safeMode)<SUB>1329</SUB>> ]
"3966" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;safeMode not support a...)<SUB>1330</SUB>> ]
"3982" [label = <(&lt;operator&gt;.fieldAccess,Feature.SupportAutoType)<SUB>1333</SUB>> ]
"3985" [label = <(FIELD_IDENTIFIER,mask,mask)<SUB>1333</SUB>> ]
"3989" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1334</SUB>> ]
"3991" [label = <(&lt;operator&gt;.logicalOr,this.autoTypeSupport || (features &amp; mask) != 0)<SUB>1334</SUB>> ]
"3999" [label = <(&lt;operator&gt;.notEquals,(JSON.DEFAULT_PARSER_FEATURE &amp; mask) != 0)<SUB>1336</SUB>> ]
"4008" [label = <(&lt;operator&gt;.greaterEqualsThan,typeName.length() &gt;= 192)<SUB>1338</SUB>> ]
"4012" [label = <(&lt;operator&gt;.lessThan,typeName.length() &lt; 3)<SUB>1338</SUB>> ]
"4017" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1339</SUB>> ]
"4035" [label = <(&lt;operator&gt;.assignment,expectClassFlag = false)<SUB>1344</SUB>> ]
"4108" [label = <(&lt;operator&gt;.xor,fnv1a_64_magic_hashcode ^ className.charAt(0))<SUB>1367</SUB>> ]
"4119" [label = <(&lt;operator&gt;.throw,// [
throw new JSONException(&quot;autoType is not ...)<SUB>1369</SUB>> ]
"4133" [label = <(&lt;operator&gt;.multiplication,(h1 ^ className.charAt(className.length() - 1))...)<SUB>1372</SUB>> ]
"4145" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1373</SUB>> ]
"4161" [label = <(&lt;operator&gt;.xor,((((fnv1a_64_magic_hashcode ^ className.charAt(...)<SUB>1376</SUB>> ]
"4189" [label = <(binarySearch,Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODE...)<SUB>1384</SUB>> ]
"4198" [label = <(&lt;operator&gt;.fieldAccess,this.internalDenyHashCodes)<SUB>1386</SUB>> ]
"4204" [label = <(&lt;operator&gt;.assignment,long hash = h3)<SUB>1387</SUB>> ]
"4251" [label = <(&lt;operator&gt;.logicalNot,!internalWhite)<SUB>1397</SUB>> ]
"4253" [label = <(&lt;operator&gt;.logicalOr,autoTypeSupport || expectClassFlag)<SUB>1397</SUB>> ]
"4260" [label = <(&lt;operator&gt;.assignment,long hash = h3)<SUB>1398</SUB>> ]
"4358" [label = <(&lt;operator&gt;.assignment,clazz = deserializers.findClass(typeName))<SUB>1421</SUB>> ]
"4367" [label = <(&lt;operator&gt;.logicalAnd,expectClass == null &amp;&amp; clazz != null &amp;&amp; Throwab...)<SUB>1424</SUB>> ]
"4380" [label = <(&lt;operator&gt;.logicalNot,!autoTypeSupport)<SUB>1424</SUB>> ]
"4385" [label = <(&lt;operator&gt;.assignment,clazz = null)<SUB>1425</SUB>> ]
"4393" [label = <(&lt;operator&gt;.assignment,clazz = typeMapping.get(typeName))<SUB>1429</SUB>> ]
"4403" [label = <(&lt;operator&gt;.assignment,clazz = TypeUtils.loadClass(typeName, defaultCl...)<SUB>1433</SUB>> ]
"4456" [label = <(RETURN,return clazz;,return clazz;)<SUB>1444</SUB>> ]
"4460" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1447</SUB>> ]
"4465" [label = <(&lt;operator&gt;.assignment,long hash = h3)<SUB>1448</SUB>> ]
"4590" [label = <(&lt;operator&gt;.assignment,String resource = typeName.replace('.', '/') + ...)<SUB>1482</SUB>> ]
"4654" [label = <(close,close(is))<SUB>1497</SUB>> ]
"4659" [label = <(&lt;operator&gt;.logicalOr,autoTypeSupport || jsonType)<SUB>1500</SUB>> ]
"4667" [label = <(&lt;operator&gt;.assignment,boolean cacheClass = autoTypeSupport || jsonType)<SUB>1501</SUB>> ]
"4674" [label = <(&lt;operator&gt;.assignment,clazz = TypeUtils.loadClass(typeName, defaultCl...)<SUB>1502</SUB>> ]
"4774" [label = <(&lt;operator&gt;.assignment,JavaBeanInfo beanInfo = JavaBeanInfo.build(claz...)<SUB>1531</SUB>> ]
"4808" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1537</SUB>> ]
"4823" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1542</SUB>> ]
"3899" [label = <(FIELD_IDENTIFIER,autoTypeCheckHandlers,autoTypeCheckHandlers)<SUB>1316</SUB>> ]
"3905" [label = <(iterator,&lt;empty&gt;)<SUB>1317</SUB>> ]
"3910" [label = <(hasNext,&lt;empty&gt;)<SUB>1317</SUB>> ]
"3939" [label = <(FIELD_IDENTIFIER,SafeMode,SafeMode)<SUB>1325</SUB>> ]
"3947" [label = <(&lt;operator&gt;.fieldAccess,this.safeMode)<SUB>1326</SUB>> ]
"3949" [label = <(&lt;operator&gt;.notEquals,(features &amp; safeModeMask) != 0)<SUB>1327</SUB>> ]
"3955" [label = <(&lt;operator&gt;.and,JSON.DEFAULT_PARSER_FEATURE &amp; safeModeMask)<SUB>1328</SUB>> ]
"3984" [label = <(FIELD_IDENTIFIER,SupportAutoType,SupportAutoType)<SUB>1333</SUB>> ]
"3992" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1334</SUB>> ]
"3994" [label = <(&lt;operator&gt;.notEquals,(features &amp; mask) != 0)<SUB>1335</SUB>> ]
"4000" [label = <(&lt;operator&gt;.and,JSON.DEFAULT_PARSER_FEATURE &amp; mask)<SUB>1336</SUB>> ]
"4009" [label = <(length,typeName.length())<SUB>1338</SUB>> ]
"4013" [label = <(length,typeName.length())<SUB>1338</SUB>> ]
"4041" [label = <(&lt;operator&gt;.assignment,long expectHash = TypeUtils.fnv1a_64(expectClas...)<SUB>1346</SUB>> ]
"4110" [label = <(charAt,className.charAt(0))<SUB>1367</SUB>> ]
"4134" [label = <(&lt;operator&gt;.xor,h1 ^ className.charAt(className.length() - 1))<SUB>1372</SUB>> ]
"4162" [label = <(&lt;operator&gt;.multiplication,(((fnv1a_64_magic_hashcode ^ className.charAt(0...)<SUB>1376</SUB>> ]
"4175" [label = <(charAt,className.charAt(2))<SUB>1380</SUB>> ]
"4191" [label = <(&lt;operator&gt;.fieldAccess,com.alibaba.fastjson.parser.ParserConfig.INTERN...)<SUB>1384</SUB>> ]
"4200" [label = <(FIELD_IDENTIFIER,internalDenyHashCodes,internalDenyHashCodes)<SUB>1386</SUB>> ]
"4209" [label = <(&lt;operator&gt;.assignment,int i = 3)<SUB>1388</SUB>> ]
"4212" [label = <(&lt;operator&gt;.lessThan,i &lt; className.length())<SUB>1388</SUB>> ]
"4216" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1388</SUB>> ]
"4254" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1397</SUB>> ]
"4265" [label = <(&lt;operator&gt;.assignment,int i = 3)<SUB>1399</SUB>> ]
"4268" [label = <(&lt;operator&gt;.lessThan,i &lt; className.length())<SUB>1399</SUB>> ]
"4272" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1399</SUB>> ]
"4360" [label = <(findClass,this.deserializers.findClass(typeName))<SUB>1421</SUB>> ]
"4368" [label = <(&lt;operator&gt;.logicalAnd,expectClass == null &amp;&amp; clazz != null)<SUB>1424</SUB>> ]
"4375" [label = <(isAssignableFrom,Throwable.class.isAssignableFrom(clazz))<SUB>1424</SUB>> ]
"4381" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1424</SUB>> ]
"4395" [label = <(get,this.typeMapping.get(typeName))<SUB>1429</SUB>> ]
"4405" [label = <(loadClass,loadClass(typeName, defaultClassLoader, true))<SUB>1433</SUB>> ]
"4418" [label = <(&lt;operator&gt;.logicalAnd,expectClass != null &amp;&amp; clazz != java.util.HashM...)<SUB>1437</SUB>> ]
"4462" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1447</SUB>> ]
"4470" [label = <(&lt;operator&gt;.assignment,int i = 3)<SUB>1449</SUB>> ]
"4473" [label = <(&lt;operator&gt;.lessThan,i &lt; className.length())<SUB>1449</SUB>> ]
"4477" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1449</SUB>> ]
"4592" [label = <(&lt;operator&gt;.addition,typeName.replace('.', '/') + &quot;.class&quot;)<SUB>1482</SUB>> ]
"4599" [label = <(&lt;operator&gt;.notEquals,defaultClassLoader != null)<SUB>1483</SUB>> ]
"4623" [label = <(&lt;operator&gt;.notEquals,is != null)<SUB>1488</SUB>> ]
"4660" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1500</SUB>> ]
"4669" [label = <(&lt;operator&gt;.logicalOr,autoTypeSupport || jsonType)<SUB>1501</SUB>> ]
"4676" [label = <(loadClass,loadClass(typeName, defaultClassLoader, cacheCl...)<SUB>1502</SUB>> ]
"4689" [label = <(IDENTIFIER,jsonType,if (jsonType))<SUB>1506</SUB>> ]
"4703" [label = <(&lt;operator&gt;.logicalOr,// classloader is danger
ClassLoader.class.isA...)<SUB>1513</SUB>> ]
"4734" [label = <(&lt;operator&gt;.notEquals,expectClass != null)<SUB>1520</SUB>> ]
"4776" [label = <(build,build(clazz, clazz, propertyNamingStrategy))<SUB>1531</SUB>> ]
"4784" [label = <(&lt;operator&gt;.logicalAnd,beanInfo.creatorConstructor != null &amp;&amp; autoType...)<SUB>1532</SUB>> ]
"4810" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1537</SUB>> ]
"4813" [label = <(&lt;operator&gt;.logicalOr,typeName.endsWith(&quot;Exception&quot;) || typeName.ends...)<SUB>1538</SUB>> ]
"4841" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1546</SUB>> ]
"3906" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeCheckHandlers)<SUB>1317</SUB>> ]
"3914" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>1317</SUB>> ]
"3919" [label = <(&lt;operator&gt;.assignment,Class&lt;?&gt; type = h.handler(typeName, expectClass...)<SUB>1318</SUB>> ]
"3948" [label = <(FIELD_IDENTIFIER,safeMode,safeMode)<SUB>1326</SUB>> ]
"3950" [label = <(&lt;operator&gt;.and,features &amp; safeModeMask)<SUB>1327</SUB>> ]
"3956" [label = <(&lt;operator&gt;.fieldAccess,JSON.DEFAULT_PARSER_FEATURE)<SUB>1328</SUB>> ]
"3969" [label = <(&lt;operator&gt;.assignment,$obj9 = new JSONException(&quot;safeMode not support...)<SUB>1330</SUB>> ]
"3972" [label = <(&lt;init&gt;,new JSONException(&quot;safeMode not support autoTyp...)<SUB>1330</SUB>> ]
"3993" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1334</SUB>> ]
"3995" [label = <(&lt;operator&gt;.and,features &amp; mask)<SUB>1335</SUB>> ]
"4001" [label = <(&lt;operator&gt;.fieldAccess,JSON.DEFAULT_PARSER_FEATURE)<SUB>1336</SUB>> ]
"4020" [label = <(&lt;operator&gt;.assignment,$obj10 = new JSONException(&quot;autoType is not sup...)<SUB>1339</SUB>> ]
"4023" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1339</SUB>> ]
"4043" [label = <(fnv1a_64,fnv1a_64(expectClass.getName()))<SUB>1346</SUB>> ]
"4048" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4122" [label = <(&lt;operator&gt;.assignment,$obj11 = new JSONException(&quot;autoType is not sup...)<SUB>1369</SUB>> ]
"4125" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1369</SUB>> ]
"4136" [label = <(charAt,className.charAt(className.length() - 1))<SUB>1372</SUB>> ]
"4148" [label = <(&lt;operator&gt;.assignment,$obj12 = new JSONException(&quot;autoType is not sup...)<SUB>1373</SUB>> ]
"4151" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1373</SUB>> ]
"4163" [label = <(&lt;operator&gt;.xor,((fnv1a_64_magic_hashcode ^ className.charAt(0)...)<SUB>1376</SUB>> ]
"4193" [label = <(FIELD_IDENTIFIER,INTERNAL_WHITELIST_HASHCODES,INTERNAL_WHITELIST_HASHCODES)<SUB>1384</SUB>> ]
"4214" [label = <(length,className.length())<SUB>1388</SUB>> ]
"4219" [label = <(&lt;operators&gt;.assignmentXor,hash ^= className.charAt(i))<SUB>1389</SUB>> ]
"4224" [label = <(&lt;operator&gt;.assignmentMultiplication,hash *= fnv1a_64_magic_prime)<SUB>1390</SUB>> ]
"4256" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1397</SUB>> ]
"4270" [label = <(length,className.length())<SUB>1399</SUB>> ]
"4275" [label = <(&lt;operators&gt;.assignmentXor,hash ^= className.charAt(i))<SUB>1400</SUB>> ]
"4280" [label = <(&lt;operator&gt;.assignmentMultiplication,hash *= fnv1a_64_magic_prime)<SUB>1401</SUB>> ]
"4361" [label = <(&lt;operator&gt;.fieldAccess,this.deserializers)<SUB>1421</SUB>> ]
"4369" [label = <(&lt;operator&gt;.equals,expectClass == null)<SUB>1424</SUB>> ]
"4372" [label = <(&lt;operator&gt;.notEquals,clazz != null)<SUB>1424</SUB>> ]
"4376" [label = <(&lt;operator&gt;.fieldAccess,Throwable.class)<SUB>1424</SUB>> ]
"4383" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1424</SUB>> ]
"4396" [label = <(&lt;operator&gt;.fieldAccess,this.typeMapping)<SUB>1429</SUB>> ]
"4408" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1433</SUB>> ]
"4419" [label = <(&lt;operator&gt;.logicalAnd,expectClass != null &amp;&amp; clazz != java.util.HashM...)<SUB>1437</SUB>> ]
"4434" [label = <(&lt;operator&gt;.logicalNot,!expectClass.isAssignableFrom(clazz))<SUB>1440</SUB>> ]
"4439" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;type not match. &quot; + ty...)<SUB>1441</SUB>> ]
"4475" [label = <(length,className.length())<SUB>1449</SUB>> ]
"4481" [label = <(&lt;operator&gt;.assignment,char c = className.charAt(i))<SUB>1450</SUB>> ]
"4486" [label = <(&lt;operators&gt;.assignmentXor,hash ^= c)<SUB>1451</SUB>> ]
"4489" [label = <(&lt;operator&gt;.assignmentMultiplication,hash *= fnv1a_64_magic_prime)<SUB>1452</SUB>> ]
"4593" [label = <(replace,typeName.replace('.', '/'))<SUB>1482</SUB>> ]
"4600" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1483</SUB>> ]
"4605" [label = <(&lt;operator&gt;.assignment,is = defaultClassLoader.getResourceAsStream(res...)<SUB>1484</SUB>> ]
"4628" [label = <(&lt;operator&gt;.assignment,ClassReader classReader = new ClassReader(is, t...)<SUB>1489</SUB>> ]
"4631" [label = <(&lt;init&gt;,new ClassReader(is, true))<SUB>1489</SUB>> ]
"4636" [label = <(&lt;operator&gt;.assignment,TypeCollector visitor = new TypeCollector(&quot;&lt;cli...)<SUB>1490</SUB>> ]
"4639" [label = <(&lt;init&gt;,new TypeCollector(&quot;&lt;clinit&gt;&quot;, new Class[0]))<SUB>1490</SUB>> ]
"4644" [label = <(accept,accept(visitor))<SUB>1491</SUB>> ]
"4647" [label = <(&lt;operator&gt;.assignment,jsonType = visitor.hasJsonType())<SUB>1492</SUB>> ]
"4662" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1500</SUB>> ]
"4670" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1501</SUB>> ]
"4679" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1502</SUB>> ]
"4700" [label = <(RETURN,return clazz;,return clazz;)<SUB>1510</SUB>> ]
"4704" [label = <(&lt;operator&gt;.logicalOr,// classloader is danger
ClassLoader.class.isA...)<SUB>1513</SUB>> ]
"4715" [label = <(isAssignableFrom,javax.sql.RowSet.class.isAssignableFrom(clazz))<SUB>1515</SUB>> ]
"4721" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1517</SUB>> ]
"4780" [label = <(&lt;operator&gt;.fieldAccess,this.propertyNamingStrategy)<SUB>1531</SUB>> ]
"4785" [label = <(&lt;operator&gt;.notEquals,beanInfo.creatorConstructor != null)<SUB>1532</SUB>> ]
"4790" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1532</SUB>> ]
"4794" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1533</SUB>> ]
"4814" [label = <(endsWith,typeName.endsWith(&quot;Exception&quot;))<SUB>1538</SUB>> ]
"4817" [label = <(endsWith,typeName.endsWith(&quot;Error&quot;))<SUB>1538</SUB>> ]
"4821" [label = <(RETURN,return null;,return null;)<SUB>1539</SUB>> ]
"4826" [label = <(&lt;operator&gt;.assignment,$obj21 = new JSONException(&quot;autoType is not sup...)<SUB>1542</SUB>> ]
"4829" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1542</SUB>> ]
"4843" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1546</SUB>> ]
"4845" [label = <(addMapping,addMapping(typeName, clazz))<SUB>1547</SUB>> ]
"3908" [label = <(FIELD_IDENTIFIER,autoTypeCheckHandlers,autoTypeCheckHandlers)<SUB>1317</SUB>> ]
"3916" [label = <(next,&lt;empty&gt;)<SUB>1317</SUB>> ]
"3921" [label = <(handler,h.handler(typeName, expectClass, features))<SUB>1318</SUB>> ]
"3927" [label = <(&lt;operator&gt;.notEquals,type != null)<SUB>1319</SUB>> ]
"3958" [label = <(FIELD_IDENTIFIER,DEFAULT_PARSER_FEATURE,DEFAULT_PARSER_FEATURE)<SUB>1328</SUB>> ]
"3971" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;safeMode not support autoTyp...)<SUB>1330</SUB>> ]
"3974" [label = <(&lt;operator&gt;.addition,&quot;safeMode not support autoType : &quot; + typeName)<SUB>1330</SUB>> ]
"4003" [label = <(FIELD_IDENTIFIER,DEFAULT_PARSER_FEATURE,DEFAULT_PARSER_FEATURE)<SUB>1336</SUB>> ]
"4022" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1339</SUB>> ]
"4025" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1339</SUB>> ]
"4045" [label = <(getName,expectClass.getName())<SUB>1346</SUB>> ]
"4049" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4084" [label = <(&lt;operator&gt;.equals,expectHash == 0xd734ceb4c3e9d1daL)<SUB>1356</SUB>> ]
"4088" [label = <(&lt;operator&gt;.assignment,expectClassFlag = false)<SUB>1358</SUB>> ]
"4124" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1369</SUB>> ]
"4127" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1369</SUB>> ]
"4138" [label = <(&lt;operator&gt;.subtraction,className.length() - 1)<SUB>1372</SUB>> ]
"4150" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1373</SUB>> ]
"4153" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1373</SUB>> ]
"4164" [label = <(&lt;operator&gt;.multiplication,(fnv1a_64_magic_hashcode ^ className.charAt(0))...)<SUB>1376</SUB>> ]
"4171" [label = <(charAt,className.charAt(1))<SUB>1378</SUB>> ]
"4221" [label = <(charAt,className.charAt(i))<SUB>1389</SUB>> ]
"4228" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(internalDenyHashCodes, hash...)<SUB>1391</SUB>> ]
"4277" [label = <(charAt,className.charAt(i))<SUB>1400</SUB>> ]
"4284" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(acceptHashCodes, hash) &gt;= 0)<SUB>1402</SUB>> ]
"4310" [label = <(&lt;operator&gt;.logicalAnd,Arrays.binarySearch(denyHashCodes, hash) &gt;= 0 &amp;...)<SUB>1408</SUB>> ]
"4363" [label = <(FIELD_IDENTIFIER,deserializers,deserializers)<SUB>1421</SUB>> ]
"4378" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1424</SUB>> ]
"4398" [label = <(FIELD_IDENTIFIER,typeMapping,typeMapping)<SUB>1429</SUB>> ]
"4410" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1433</SUB>> ]
"4420" [label = <(&lt;operator&gt;.logicalAnd,expectClass != null &amp;&amp; clazz != java.util.HashM...)<SUB>1437</SUB>> ]
"4429" [label = <(&lt;operator&gt;.notEquals,clazz != java.util.LinkedHashMap.class)<SUB>1439</SUB>> ]
"4435" [label = <(isAssignableFrom,expectClass.isAssignableFrom(clazz))<SUB>1440</SUB>> ]
"4483" [label = <(charAt,className.charAt(i))<SUB>1450</SUB>> ]
"4493" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(denyHashCodes, hash) &gt;= 0)<SUB>1454</SUB>> ]
"4526" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(acceptHashCodes, hash) &gt;= 0)<SUB>1463</SUB>> ]
"4602" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1483</SUB>> ]
"4607" [label = <(getResourceAsStream,this.defaultClassLoader.getResourceAsStream(res...)<SUB>1484</SUB>> ]
"4614" [label = <(&lt;operator&gt;.assignment,is = ParserConfig.class.getClassLoader().getRes...)<SUB>1486</SUB>> ]
"4630" [label = <(&lt;operator&gt;.alloc,new ClassReader(is, true))<SUB>1489</SUB>> ]
"4638" [label = <(&lt;operator&gt;.alloc,new TypeCollector(&quot;&lt;clinit&gt;&quot;, new Class[0]))<SUB>1490</SUB>> ]
"4642" [label = <(&lt;operator&gt;.alloc,new Class[0])> ]
"4649" [label = <(hasJsonType,hasJsonType())<SUB>1492</SUB>> ]
"4672" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1501</SUB>> ]
"4681" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1502</SUB>> ]
"4692" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1507</SUB>> ]
"4705" [label = <(isAssignableFrom,ClassLoader.class.isAssignableFrom(clazz))<SUB>1513</SUB>> ]
"4710" [label = <(isAssignableFrom,javax.sql.DataSource.class.isAssignableFrom(clazz))<SUB>1514</SUB>> ]
"4716" [label = <(&lt;operator&gt;.fieldAccess,javax.sql.RowSet.class)<SUB>1515</SUB>> ]
"4739" [label = <(isAssignableFrom,expectClass.isAssignableFrom(clazz))<SUB>1521</SUB>> ]
"4782" [label = <(FIELD_IDENTIFIER,propertyNamingStrategy,propertyNamingStrategy)<SUB>1531</SUB>> ]
"4786" [label = <(&lt;operator&gt;.fieldAccess,beanInfo.creatorConstructor)<SUB>1532</SUB>> ]
"4792" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1532</SUB>> ]
"4828" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1542</SUB>> ]
"4831" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1542</SUB>> ]
"3931" [label = <(RETURN,return type;,return type;)<SUB>1320</SUB>> ]
"4050" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4081" [label = <(&lt;operator&gt;.equals,expectHash == 0xe2a8ddba03e69e0dL)<SUB>1355</SUB>> ]
"4093" [label = <(&lt;operator&gt;.assignment,expectClassFlag = true)<SUB>1360</SUB>> ]
"4139" [label = <(length,className.length())<SUB>1372</SUB>> ]
"4165" [label = <(&lt;operator&gt;.xor,fnv1a_64_magic_hashcode ^ className.charAt(0))<SUB>1376</SUB>> ]
"4229" [label = <(binarySearch,Arrays.binarySearch(internalDenyHashCodes, hash))<SUB>1391</SUB>> ]
"4237" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1392</SUB>> ]
"4285" [label = <(binarySearch,Arrays.binarySearch(acceptHashCodes, hash))<SUB>1402</SUB>> ]
"4293" [label = <(&lt;operator&gt;.assignment,clazz = TypeUtils.loadClass(typeName, defaultCl...)<SUB>1403</SUB>> ]
"4311" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(denyHashCodes, hash) &gt;= 0)<SUB>1408</SUB>> ]
"4319" [label = <(&lt;operator&gt;.equals,TypeUtils.getClassFromMapping(typeName) == null)<SUB>1408</SUB>> ]
"4336" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1413</SUB>> ]
"4421" [label = <(&lt;operator&gt;.notEquals,expectClass != null)<SUB>1437</SUB>> ]
"4424" [label = <(&lt;operator&gt;.notEquals,clazz != java.util.HashMap.class)<SUB>1438</SUB>> ]
"4431" [label = <(&lt;operator&gt;.fieldAccess,java.util.LinkedHashMap.class)<SUB>1439</SUB>> ]
"4442" [label = <(&lt;operator&gt;.assignment,$obj15 = new JSONException(&quot;type not match. &quot; +...)<SUB>1441</SUB>> ]
"4445" [label = <(&lt;init&gt;,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1441</SUB>> ]
"4494" [label = <(binarySearch,Arrays.binarySearch(denyHashCodes, hash))<SUB>1454</SUB>> ]
"4513" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;autoType is not suppor...)<SUB>1459</SUB>> ]
"4527" [label = <(binarySearch,Arrays.binarySearch(acceptHashCodes, hash))<SUB>1463</SUB>> ]
"4535" [label = <(&lt;operator&gt;.assignment,clazz = TypeUtils.loadClass(typeName, defaultCl...)<SUB>1464</SUB>> ]
"4577" [label = <(RETURN,return clazz;,return clazz;)<SUB>1474</SUB>> ]
"4608" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1484</SUB>> ]
"4616" [label = <(getResourceAsStream,ParserConfig.class.getClassLoader().getResource...)<SUB>1486</SUB>> ]
"4694" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1507</SUB>> ]
"4696" [label = <(addMapping,addMapping(typeName, clazz))<SUB>1508</SUB>> ]
"4706" [label = <(&lt;operator&gt;.fieldAccess,ClassLoader.class)<SUB>1513</SUB>> ]
"4711" [label = <(&lt;operator&gt;.fieldAccess,javax.sql.DataSource.class)<SUB>1514</SUB>> ]
"4718" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1515</SUB>> ]
"4724" [label = <(&lt;operator&gt;.assignment,$obj18 = new JSONException(&quot;autoType is not sup...)<SUB>1517</SUB>> ]
"4727" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1517</SUB>> ]
"4752" [label = <(RETURN,return clazz;,return clazz;)<SUB>1525</SUB>> ]
"4788" [label = <(FIELD_IDENTIFIER,creatorConstructor,creatorConstructor)<SUB>1532</SUB>> ]
"4797" [label = <(&lt;operator&gt;.assignment,$obj20 = new JSONException(&quot;autoType is not sup...)<SUB>1533</SUB>> ]
"4800" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1533</SUB>> ]
"4051" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4078" [label = <(&lt;operator&gt;.equals,expectHash == 0xe3dd9875a2dc5283L)<SUB>1354</SUB>> ]
"4167" [label = <(charAt,className.charAt(0))<SUB>1376</SUB>> ]
"4231" [label = <(&lt;operator&gt;.fieldAccess,this.internalDenyHashCodes)<SUB>1391</SUB>> ]
"4287" [label = <(&lt;operator&gt;.fieldAccess,this.acceptHashCodes)<SUB>1402</SUB>> ]
"4295" [label = <(loadClass,loadClass(typeName, defaultClassLoader, true))<SUB>1403</SUB>> ]
"4303" [label = <(&lt;operator&gt;.notEquals,clazz != null)<SUB>1404</SUB>> ]
"4312" [label = <(binarySearch,Arrays.binarySearch(denyHashCodes, hash))<SUB>1408</SUB>> ]
"4320" [label = <(getClassFromMapping,getClassFromMapping(typeName))<SUB>1408</SUB>> ]
"4326" [label = <(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(acceptHashCodes, fullHash) ...)<SUB>1409</SUB>> ]
"4426" [label = <(&lt;operator&gt;.fieldAccess,java.util.HashMap.class)<SUB>1438</SUB>> ]
"4433" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1439</SUB>> ]
"4444" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1441</SUB>> ]
"4447" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot; + expect...)<SUB>1441</SUB>> ]
"4496" [label = <(&lt;operator&gt;.fieldAccess,this.denyHashCodes)<SUB>1454</SUB>> ]
"4503" [label = <(&lt;operator&gt;.logicalOr,typeName.endsWith(&quot;Exception&quot;) || typeName.ends...)<SUB>1455</SUB>> ]
"4529" [label = <(&lt;operator&gt;.fieldAccess,this.acceptHashCodes)<SUB>1463</SUB>> ]
"4537" [label = <(loadClass,loadClass(typeName, defaultClassLoader, true))<SUB>1464</SUB>> ]
"4545" [label = <(&lt;operator&gt;.equals,clazz == null)<SUB>1466</SUB>> ]
"4552" [label = <(&lt;operator&gt;.logicalAnd,expectClass != null &amp;&amp; expectClass.isAssignable...)<SUB>1470</SUB>> ]
"4610" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1484</SUB>> ]
"4617" [label = <(getClassLoader,ParserConfig.class.getClassLoader())<SUB>1486</SUB>> ]
"4708" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1513</SUB>> ]
"4713" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1514</SUB>> ]
"4726" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1517</SUB>> ]
"4729" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1517</SUB>> ]
"4744" [label = <(&lt;operator&gt;.fieldAccess,this.autoTypeSupport)<SUB>1522</SUB>> ]
"4756" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;type not match. &quot; + ty...)<SUB>1527</SUB>> ]
"4799" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1533</SUB>> ]
"4802" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1533</SUB>> ]
"4052" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4075" [label = <(&lt;operator&gt;.equals,expectHash == 0x6439c4dff712ae8bL)<SUB>1353</SUB>> ]
"4233" [label = <(FIELD_IDENTIFIER,internalDenyHashCodes,internalDenyHashCodes)<SUB>1391</SUB>> ]
"4240" [label = <(&lt;operator&gt;.assignment,$obj13 = new JSONException(&quot;autoType is not sup...)<SUB>1392</SUB>> ]
"4243" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1392</SUB>> ]
"4289" [label = <(FIELD_IDENTIFIER,acceptHashCodes,acceptHashCodes)<SUB>1402</SUB>> ]
"4298" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1403</SUB>> ]
"4307" [label = <(RETURN,return clazz;,return clazz;)<SUB>1405</SUB>> ]
"4314" [label = <(&lt;operator&gt;.fieldAccess,this.denyHashCodes)<SUB>1408</SUB>> ]
"4327" [label = <(binarySearch,Arrays.binarySearch(acceptHashCodes, fullHash))<SUB>1409</SUB>> ]
"4339" [label = <(&lt;operator&gt;.assignment,$obj14 = new JSONException(&quot;autoType is not sup...)<SUB>1413</SUB>> ]
"4342" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1413</SUB>> ]
"4428" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1438</SUB>> ]
"4448" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot;)<SUB>1441</SUB>> ]
"4453" [label = <(getName,expectClass.getName())<SUB>1441</SUB>> ]
"4498" [label = <(FIELD_IDENTIFIER,denyHashCodes,denyHashCodes)<SUB>1454</SUB>> ]
"4504" [label = <(endsWith,typeName.endsWith(&quot;Exception&quot;))<SUB>1455</SUB>> ]
"4507" [label = <(endsWith,typeName.endsWith(&quot;Error&quot;))<SUB>1455</SUB>> ]
"4511" [label = <(RETURN,return null;,return null;)<SUB>1456</SUB>> ]
"4516" [label = <(&lt;operator&gt;.assignment,$obj16 = new JSONException(&quot;autoType is not sup...)<SUB>1459</SUB>> ]
"4519" [label = <(&lt;init&gt;,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1459</SUB>> ]
"4531" [label = <(FIELD_IDENTIFIER,acceptHashCodes,acceptHashCodes)<SUB>1463</SUB>> ]
"4540" [label = <(&lt;operator&gt;.fieldAccess,this.defaultClassLoader)<SUB>1464</SUB>> ]
"4549" [label = <(RETURN,return expectClass;,return expectClass;)<SUB>1467</SUB>> ]
"4553" [label = <(&lt;operator&gt;.notEquals,expectClass != null)<SUB>1470</SUB>> ]
"4556" [label = <(isAssignableFrom,expectClass.isAssignableFrom(clazz))<SUB>1470</SUB>> ]
"4560" [label = <(&lt;operator&gt;.throw,throw new JSONException(&quot;type not match. &quot; + ty...)<SUB>1471</SUB>> ]
"4618" [label = <(&lt;operator&gt;.fieldAccess,ParserConfig.class)<SUB>1486</SUB>> ]
"4746" [label = <(FIELD_IDENTIFIER,autoTypeSupport,autoTypeSupport)<SUB>1522</SUB>> ]
"4748" [label = <(addMapping,addMapping(typeName, clazz))<SUB>1523</SUB>> ]
"4053" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4072" [label = <(&lt;operator&gt;.equals,expectHash == 0x47ef269aadc650b4L)<SUB>1352</SUB>> ]
"4242" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1392</SUB>> ]
"4245" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1392</SUB>> ]
"4300" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1403</SUB>> ]
"4316" [label = <(FIELD_IDENTIFIER,denyHashCodes,denyHashCodes)<SUB>1408</SUB>> ]
"4329" [label = <(&lt;operator&gt;.fieldAccess,this.acceptHashCodes)<SUB>1409</SUB>> ]
"4341" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1413</SUB>> ]
"4344" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1413</SUB>> ]
"4449" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName)<SUB>1441</SUB>> ]
"4518" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;autoType is not support. &quot; +...)<SUB>1459</SUB>> ]
"4521" [label = <(&lt;operator&gt;.addition,&quot;autoType is not support. &quot; + typeName)<SUB>1459</SUB>> ]
"4542" [label = <(FIELD_IDENTIFIER,defaultClassLoader,defaultClassLoader)<SUB>1464</SUB>> ]
"4620" [label = <(FIELD_IDENTIFIER,class,class)<SUB>1486</SUB>> ]
"4759" [label = <(&lt;operator&gt;.assignment,$obj19 = new JSONException(&quot;type not match. &quot; +...)<SUB>1527</SUB>> ]
"4762" [label = <(&lt;init&gt;,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1527</SUB>> ]
"4054" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4069" [label = <(&lt;operator&gt;.equals,expectHash == 0x295c4605fd1eaa95L)<SUB>1351</SUB>> ]
"4331" [label = <(FIELD_IDENTIFIER,acceptHashCodes,acceptHashCodes)<SUB>1409</SUB>> ]
"4563" [label = <(&lt;operator&gt;.assignment,$obj17 = new JSONException(&quot;type not match. &quot; +...)<SUB>1471</SUB>> ]
"4566" [label = <(&lt;init&gt;,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1471</SUB>> ]
"4761" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1527</SUB>> ]
"4764" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot; + expect...)<SUB>1527</SUB>> ]
"4055" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4066" [label = <(&lt;operator&gt;.equals,expectHash == 0xed007300a7b227c6L)<SUB>1350</SUB>> ]
"4565" [label = <(&lt;operator&gt;.alloc,new JSONException(&quot;type not match. &quot; + typeName...)<SUB>1471</SUB>> ]
"4568" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot; + expect...)<SUB>1471</SUB>> ]
"4765" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot;)<SUB>1527</SUB>> ]
"4770" [label = <(getName,expectClass.getName())<SUB>1527</SUB>> ]
"4056" [label = <(&lt;operator&gt;.logicalOr,expectHash == 0x90a25f5baa21529eL || expectHash...)<SUB>1347</SUB>> ]
"4063" [label = <(&lt;operator&gt;.equals,expectHash == 0xaf586a571e302c6bL)<SUB>1349</SUB>> ]
"4569" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName + &quot; -&gt; &quot;)<SUB>1471</SUB>> ]
"4574" [label = <(getName,expectClass.getName())<SUB>1471</SUB>> ]
"4766" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName)<SUB>1527</SUB>> ]
"4057" [label = <(&lt;operator&gt;.equals,expectHash == 0x90a25f5baa21529eL)<SUB>1347</SUB>> ]
"4060" [label = <(&lt;operator&gt;.equals,expectHash == 0x2d10a5801b9d6136L)<SUB>1348</SUB>> ]
"4570" [label = <(&lt;operator&gt;.addition,&quot;type not match. &quot; + typeName)<SUB>1471</SUB>> ]
  "3889" -> "3897" 
  "3889" -> "3896" 
  "3889" -> "3899" 
  "3889" -> "3893" 
  "3896" -> "3986" 
  "3896" -> "4097" 
  "3896" -> "3990" 
  "3896" -> "3939" 
  "3896" -> "4162" 
  "3896" -> "4105" 
  "3896" -> "3934" 
  "3896" -> "3910" 
  "3896" -> "4186" 
  "3896" -> "3985" 
  "3896" -> "3905" 
  "3896" -> "3962" 
  "3896" -> "4107" 
  "3896" -> "4197" 
  "3896" -> "4160" 
  "3896" -> "3945" 
  "3896" -> "4191" 
  "3896" -> "4115" 
  "3896" -> "4138" 
  "3896" -> "3903" 
  "3896" -> "3991" 
  "3896" -> "4167" 
  "3896" -> "3906" 
  "3896" -> "4175" 
  "3896" -> "4134" 
  "3896" -> "4139" 
  "3896" -> "4164" 
  "3896" -> "4161" 
  "3896" -> "4182" 
  "3896" -> "4009" 
  "3896" -> "3936" 
  "3896" -> "3993" 
  "3896" -> "4251" 
  "3896" -> "3989" 
  "3896" -> "4193" 
  "3896" -> "4110" 
  "3896" -> "4136" 
  "3896" -> "3942" 
  "3896" -> "4158" 
  "3896" -> "4007" 
  "3896" -> "3940" 
  "3896" -> "3987" 
  "3896" -> "4188" 
  "3896" -> "4180" 
  "3896" -> "3992" 
  "3896" -> "3964" 
  "3896" -> "3941" 
  "3896" -> "4171" 
  "3896" -> "4250" 
  "3896" -> "4133" 
  "3896" -> "4031" 
  "3896" -> "3937" 
  "3896" -> "3984" 
  "3896" -> "4099" 
  "3896" -> "4200" 
  "3896" -> "3948" 
  "3896" -> "4132" 
  "3896" -> "3947" 
  "3896" -> "4163" 
  "3896" -> "3979" 
  "3896" -> "4198" 
  "3896" -> "3944" 
  "3896" -> "3946" 
  "3896" -> "4165" 
  "3896" -> "3981" 
  "3896" -> "4008" 
  "3896" -> "4108" 
  "3896" -> "3982" 
  "3896" -> "3908" 
  "3896" -> "4189" 
  "3962" -> "3969" 
  "3962" -> "3966" 
  "3962" -> "3974" 
  "3962" -> "3972" 
  "3962" -> "3971" 
  "4007" -> "4020" 
  "4007" -> "4023" 
  "4007" -> "4022" 
  "4007" -> "4017" 
  "4007" -> "4025" 
  "4031" -> "4056" 
  "4031" -> "4050" 
  "4031" -> "4041" 
  "4031" -> "4051" 
  "4031" -> "4048" 
  "4031" -> "4043" 
  "4031" -> "4049" 
  "4031" -> "4045" 
  "4031" -> "4057" 
  "4031" -> "4053" 
  "4031" -> "4054" 
  "4031" -> "4052" 
  "4031" -> "4035" 
  "4031" -> "4055" 
  "4115" -> "4122" 
  "4115" -> "4119" 
  "4115" -> "4124" 
  "4115" -> "4125" 
  "4115" -> "4127" 
  "4132" -> "4148" 
  "4132" -> "4145" 
  "4132" -> "4153" 
  "4132" -> "4150" 
  "4132" -> "4151" 
  "4197" -> "4204" 
  "4197" -> "4209" 
  "4197" -> "4214" 
  "4197" -> "4212" 
  "4250" -> "4368" 
  "4250" -> "4354" 
  "4250" -> "4268" 
  "4250" -> "4401" 
  "4250" -> "4348" 
  "4250" -> "4369" 
  "4250" -> "4413" 
  "4250" -> "4366" 
  "4250" -> "4350" 
  "4250" -> "4367" 
  "4250" -> "4260" 
  "4250" -> "4270" 
  "4250" -> "4389" 
  "4250" -> "4265" 
  "4354" -> "4361" 
  "4354" -> "4363" 
  "4354" -> "4358" 
  "4354" -> "4360" 
  "4366" -> "4385" 
  "4389" -> "4398" 
  "4389" -> "4395" 
  "4389" -> "4396" 
  "4389" -> "4393" 
  "4401" -> "4410" 
  "4401" -> "4405" 
  "4401" -> "4403" 
  "4401" -> "4408" 
  "4413" -> "4418" 
  "4413" -> "4419" 
  "4413" -> "4459" 
  "4413" -> "4462" 
  "4413" -> "4460" 
  "4413" -> "4456" 
  "4413" -> "4420" 
  "4413" -> "4421" 
  "4459" -> "4662" 
  "4459" -> "4599" 
  "4459" -> "4465" 
  "4459" -> "4592" 
  "4459" -> "4602" 
  "4459" -> "4600" 
  "4459" -> "4658" 
  "4459" -> "4654" 
  "4459" -> "4584" 
  "4459" -> "4473" 
  "4459" -> "4660" 
  "4459" -> "4470" 
  "4459" -> "4580" 
  "4459" -> "4590" 
  "4459" -> "4684" 
  "4459" -> "4593" 
  "4459" -> "4475" 
  "4459" -> "4623" 
  "4459" -> "4659" 
  "4658" -> "4681" 
  "4658" -> "4667" 
  "4658" -> "4672" 
  "4658" -> "4669" 
  "4658" -> "4674" 
  "4658" -> "4676" 
  "4658" -> "4670" 
  "4658" -> "4679" 
  "4684" -> "4810" 
  "4684" -> "4689" 
  "4684" -> "4807" 
  "4684" -> "4808" 
  "4807" -> "4849" 
  "4807" -> "4813" 
  "4807" -> "4836" 
  "4807" -> "4814" 
  "4836" -> "4841" 
  "4836" -> "4843" 
  "3946" -> "3954" 
  "3946" -> "3956" 
  "3946" -> "3955" 
  "3946" -> "3958" 
  "3991" -> "4003" 
  "3991" -> "3999" 
  "3991" -> "4000" 
  "3991" -> "4001" 
  "4008" -> "4013" 
  "4008" -> "4012" 
  "4251" -> "4254" 
  "4251" -> "4253" 
  "4251" -> "4256" 
  "4367" -> "4380" 
  "4367" -> "4383" 
  "4367" -> "4381" 
  "3910" -> "3986" 
  "3910" -> "4097" 
  "3910" -> "3990" 
  "3910" -> "3939" 
  "3910" -> "4162" 
  "3910" -> "4105" 
  "3910" -> "3934" 
  "3910" -> "4186" 
  "3910" -> "3985" 
  "3910" -> "3962" 
  "3910" -> "4107" 
  "3910" -> "3914" 
  "3910" -> "4197" 
  "3910" -> "4160" 
  "3910" -> "3945" 
  "3910" -> "4191" 
  "3910" -> "4115" 
  "3910" -> "4138" 
  "3910" -> "3916" 
  "3910" -> "3991" 
  "3910" -> "4167" 
  "3910" -> "4175" 
  "3910" -> "4134" 
  "3910" -> "4139" 
  "3910" -> "4164" 
  "3910" -> "3919" 
  "3910" -> "4161" 
  "3910" -> "4182" 
  "3910" -> "4009" 
  "3910" -> "3936" 
  "3910" -> "3993" 
  "3910" -> "4251" 
  "3910" -> "3989" 
  "3910" -> "4193" 
  "3910" -> "4110" 
  "3910" -> "4136" 
  "3910" -> "3942" 
  "3910" -> "4158" 
  "3910" -> "4007" 
  "3910" -> "3940" 
  "3910" -> "3987" 
  "3910" -> "4188" 
  "3910" -> "4180" 
  "3910" -> "3992" 
  "3910" -> "3921" 
  "3910" -> "3964" 
  "3910" -> "3941" 
  "3910" -> "4171" 
  "3910" -> "4250" 
  "3910" -> "4133" 
  "3910" -> "3927" 
  "3910" -> "4031" 
  "3910" -> "3937" 
  "3910" -> "3984" 
  "3910" -> "4099" 
  "3910" -> "4200" 
  "3910" -> "3948" 
  "3910" -> "4132" 
  "3910" -> "3947" 
  "3910" -> "4163" 
  "3910" -> "3979" 
  "3910" -> "4198" 
  "3910" -> "3944" 
  "3910" -> "3946" 
  "3910" -> "4165" 
  "3910" -> "3981" 
  "3910" -> "4008" 
  "3910" -> "4108" 
  "3910" -> "3982" 
  "3910" -> "4189" 
  "3947" -> "3949" 
  "3947" -> "3950" 
  "3992" -> "3995" 
  "3992" -> "3994" 
  "4212" -> "4233" 
  "4212" -> "4216" 
  "4212" -> "4224" 
  "4212" -> "4231" 
  "4212" -> "4228" 
  "4212" -> "4221" 
  "4212" -> "4214" 
  "4212" -> "4229" 
  "4212" -> "4219" 
  "4212" -> "4212" 
  "4268" -> "4284" 
  "4268" -> "4368" 
  "4268" -> "4354" 
  "4268" -> "4289" 
  "4268" -> "4285" 
  "4268" -> "4287" 
  "4268" -> "4401" 
  "4268" -> "4348" 
  "4268" -> "4369" 
  "4268" -> "4413" 
  "4268" -> "4366" 
  "4268" -> "4277" 
  "4268" -> "4280" 
  "4268" -> "4350" 
  "4268" -> "4367" 
  "4268" -> "4389" 
  "4268" -> "4275" 
  "4368" -> "4376" 
  "4368" -> "4378" 
  "4368" -> "4375" 
  "4418" -> "4447" 
  "4418" -> "4439" 
  "4418" -> "4449" 
  "4418" -> "4453" 
  "4418" -> "4448" 
  "4418" -> "4444" 
  "4418" -> "4445" 
  "4418" -> "4442" 
  "4473" -> "4493" 
  "4473" -> "4662" 
  "4473" -> "4599" 
  "4473" -> "4498" 
  "4473" -> "4592" 
  "4473" -> "4602" 
  "4473" -> "4483" 
  "4473" -> "4600" 
  "4473" -> "4658" 
  "4473" -> "4654" 
  "4473" -> "4496" 
  "4473" -> "4489" 
  "4473" -> "4584" 
  "4473" -> "4660" 
  "4473" -> "4580" 
  "4473" -> "4486" 
  "4473" -> "4494" 
  "4473" -> "4481" 
  "4473" -> "4590" 
  "4473" -> "4684" 
  "4473" -> "4593" 
  "4473" -> "4623" 
  "4473" -> "4659" 
  "4599" -> "4620" 
  "4599" -> "4618" 
  "4599" -> "4610" 
  "4599" -> "4605" 
  "4599" -> "4616" 
  "4599" -> "4614" 
  "4599" -> "4617" 
  "4599" -> "4608" 
  "4599" -> "4607" 
  "4623" -> "4649" 
  "4623" -> "4642" 
  "4623" -> "4631" 
  "4623" -> "4644" 
  "4623" -> "4630" 
  "4623" -> "4638" 
  "4623" -> "4628" 
  "4623" -> "4647" 
  "4623" -> "4636" 
  "4623" -> "4639" 
  "4689" -> "4706" 
  "4689" -> "4704" 
  "4689" -> "4705" 
  "4689" -> "4708" 
  "4689" -> "4694" 
  "4689" -> "4692" 
  "4689" -> "4700" 
  "4689" -> "4703" 
  "4689" -> "4734" 
  "4703" -> "4721" 
  "4703" -> "4729" 
  "4703" -> "4726" 
  "4703" -> "4724" 
  "4703" -> "4727" 
  "4734" -> "4786" 
  "4734" -> "4785" 
  "4734" -> "4776" 
  "4734" -> "4782" 
  "4734" -> "4774" 
  "4734" -> "4810" 
  "4734" -> "4739" 
  "4734" -> "4788" 
  "4734" -> "4780" 
  "4734" -> "4807" 
  "4734" -> "4808" 
  "4734" -> "4784" 
  "4784" -> "4794" 
  "4784" -> "4802" 
  "4784" -> "4799" 
  "4784" -> "4797" 
  "4784" -> "4800" 
  "4813" -> "4849" 
  "4813" -> "4821" 
  "4813" -> "4829" 
  "4813" -> "4836" 
  "4813" -> "4831" 
  "4813" -> "4823" 
  "4813" -> "4828" 
  "4813" -> "4826" 
  "4841" -> "4845" 
  "4048" -> "4088" 
  "4048" -> "4093" 
  "4369" -> "4372" 
  "4419" -> "4434" 
  "4419" -> "4435" 
  "4704" -> "4718" 
  "4704" -> "4715" 
  "4704" -> "4716" 
  "4785" -> "4792" 
  "4785" -> "4790" 
  "4814" -> "4817" 
  "3927" -> "3910" 
  "3927" -> "3931" 
  "4049" -> "4084" 
  "4228" -> "4243" 
  "4228" -> "4245" 
  "4228" -> "4237" 
  "4228" -> "4242" 
  "4228" -> "4240" 
  "4284" -> "4298" 
  "4284" -> "4314" 
  "4284" -> "4268" 
  "4284" -> "4295" 
  "4284" -> "4310" 
  "4284" -> "4272" 
  "4284" -> "4293" 
  "4284" -> "4316" 
  "4284" -> "4303" 
  "4284" -> "4300" 
  "4284" -> "4270" 
  "4284" -> "4311" 
  "4284" -> "4312" 
  "4310" -> "4329" 
  "4310" -> "4326" 
  "4310" -> "4331" 
  "4310" -> "4327" 
  "4420" -> "4433" 
  "4420" -> "4429" 
  "4420" -> "4431" 
  "4493" -> "4531" 
  "4493" -> "4526" 
  "4493" -> "4504" 
  "4493" -> "4503" 
  "4493" -> "4527" 
  "4493" -> "4529" 
  "4526" -> "4535" 
  "4526" -> "4545" 
  "4526" -> "4540" 
  "4526" -> "4542" 
  "4526" -> "4473" 
  "4526" -> "4475" 
  "4526" -> "4537" 
  "4526" -> "4477" 
  "4692" -> "4696" 
  "4705" -> "4713" 
  "4705" -> "4711" 
  "4705" -> "4710" 
  "4739" -> "4756" 
  "4739" -> "4770" 
  "4739" -> "4786" 
  "4739" -> "4785" 
  "4739" -> "4776" 
  "4739" -> "4746" 
  "4739" -> "4764" 
  "4739" -> "4762" 
  "4739" -> "4761" 
  "4739" -> "4765" 
  "4739" -> "4782" 
  "4739" -> "4774" 
  "4739" -> "4759" 
  "4739" -> "4810" 
  "4739" -> "4744" 
  "4739" -> "4766" 
  "4739" -> "4788" 
  "4739" -> "4780" 
  "4739" -> "4752" 
  "4739" -> "4807" 
  "4739" -> "4808" 
  "4739" -> "4784" 
  "4050" -> "4081" 
  "4311" -> "4319" 
  "4311" -> "4320" 
  "4421" -> "4426" 
  "4421" -> "4428" 
  "4421" -> "4424" 
  "4051" -> "4078" 
  "4303" -> "4314" 
  "4303" -> "4268" 
  "4303" -> "4310" 
  "4303" -> "4272" 
  "4303" -> "4316" 
  "4303" -> "4307" 
  "4303" -> "4270" 
  "4303" -> "4311" 
  "4303" -> "4312" 
  "4326" -> "4341" 
  "4326" -> "4339" 
  "4326" -> "4344" 
  "4326" -> "4342" 
  "4326" -> "4336" 
  "4503" -> "4531" 
  "4503" -> "4526" 
  "4503" -> "4521" 
  "4503" -> "4511" 
  "4503" -> "4516" 
  "4503" -> "4527" 
  "4503" -> "4519" 
  "4503" -> "4529" 
  "4503" -> "4518" 
  "4503" -> "4513" 
  "4545" -> "4549" 
  "4545" -> "4553" 
  "4545" -> "4577" 
  "4545" -> "4552" 
  "4552" -> "4569" 
  "4552" -> "4570" 
  "4552" -> "4563" 
  "4552" -> "4560" 
  "4552" -> "4574" 
  "4552" -> "4566" 
  "4552" -> "4568" 
  "4552" -> "4565" 
  "4744" -> "4748" 
  "4052" -> "4075" 
  "4504" -> "4507" 
  "4553" -> "4556" 
  "4053" -> "4072" 
  "4054" -> "4069" 
  "4055" -> "4066" 
  "4056" -> "4063" 
  "4057" -> "4060" 
}
