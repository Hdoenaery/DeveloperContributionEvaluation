import os

import pandas as pd
from scipy.stats import spearmanr

# 标准得分
standard_scores = [1, 3, 15, 5, 8, 13, 10, 11, 4, 4, 4, 16, 12, 0, 2, 7, 1, 13, 22, 17, 26, 13, 12, 11, 14, 7, 6, 3, 9,
                   25, 60]

my_scores_with_comment = [26297.92223, 9745.656819, 129802.1369, 3105.304661, 44791.05871, 9637.90882, 0, 15133.24595,
                          11.34345659, 1.620493858, 11.34345658, 25037.39222, 3633.160287, 1.600556968, 0, 583.0485861,
                          231.1026166, 2963628.49, 7841526.658, 789929.2892, 7655330.566, 5075.314451, 2831.324812,
                          12859.29934, 110683.3393, 5740.355165, 19701.18958, 203.5273039, 937.7914415, 2068.99072,
                          8666553.068]

# 我的得分
my_scores = [
    81.96901812, 64.89893553, 75756.5385, 2607.679404, 28257.58545, 7241.411051, 74652.22712, 11775.81767,
    2.803454272, 0.550967892, 2.803454271, 47905.90413, 1753.300643, 1.600556573, 405.3615871, 309.7041179,
    7.153603802, 26558.85517, 1.20E+07, 1305566.061, 1.32E+07, 2565.388075, 572.9459559, 5917.660958,
    75428.45135, 1772.470025, 19843.13666, 203.5271072, 2813.373986, 7527.323117, 524130.8956
]

my_scores_normal = [5.818301880253665, 11.446955267954307, 391.41097740408776, 23.97929020924014, 53.69358124599249,
                    52.97376286034479, 42.01474578890041, 60.70382182090256, 6.259304817393585, 6.21834895166275,
                    6.259304817184132, 94.11136606746922, 34.04416451087955, 6.627628379727821, 13.039461836942028,
                    18.997713202372076, 12.39068729051628, 69.68858790499023, 2093.9370060312585, 1042.9522251511105,
                    2043.0925581669355, 52.74940950835764, 43.207308588048605, 47.01784786580253, 124.78382868077968,
                    43.02865580902477, 47.25287362149555, 7.98035578945927, 28.493738152249634, 43.92167419457452,
                    20222.132274091262]

author_data = [
    0.43, 1.5, 490.0516909, 5.450556941, 176.3754004, 200.9074206, 117.1644277,
    192.5788964, 3.714984883, 3.714984883, 3.714984883, 686.4324801, 48.92216939,
    14.30135309, 6.951475451, 114.2639673, 8.653058115, 284.059387, 1684.124095,
    740.155503, 2287.649556, 494.1857878, 544.6753591, 224.9498233, 537.0122887,
    137.9991431, 63.92283984, 2.982808714, 33.88377906, 427.4577401, 15127.37979
]

# Human tagged data
human_tagged_data = [
    1, 3, 15, 5, 8, 13, 10, 11, 4, 4, 4, 16, 12, 0, 2, 7, 1, 13, 22, 17, 26, 13, 12, 11, 14, 7, 6, 3, 9, 25, 60, 15, 5,
    1, 1, 1, 27, 3, 15, 1, 3, 9, 8, 8, 5, 13, 3, 6, 8, 13, 6, 10, 4, 5, 5, 6, 0, 5, 0, 17, 4, 13, 14, 3, 3, 7, 19, 20,
    4, 2, 2, 15, 7, 4, 3, 6, 16, 19, 5, 1, 2, 9, 8, 6, 6, 5, 11, 3, 2, 10, 6, 2, 3, 1, 2, 7, 6, 5, 4, 5, 7, 10, 8, 7,
    13, 5, 12, 5, 3, 4, 5, 10, 5, 11, 11, 8, 16, 4, 3, 7, 3, 3, 11, 3, 8, 13, 3, 9, 1, 0.5, 22, 2, 1, 7, 6, 6, 7, 1, 23,
    1.5, 0.5, 3, 2, 11, 10, 10, 11, 13, 16, 10, 16, 14, 17, 13
]

# DEffort score
effort_score = [
    0.43, 1.5, 490.0516909, 5.450556941, 176.3754004, 200.9074206, 117.1644277, 192.5788964, 3.714984883, 3.714984883,
    3.714984883, 686.4324801, 48.92216939, 14.30135309, 6.951475451, 114.2639673, 8.653058115, 284.059387, 1684.124095,
    740.155503, 2287.649556, 494.1857878, 544.6753591, 224.9498233, 537.0122887, 137.9991431, 63.92283984, 2.982808714,
    33.88377906, 427.4577401, 15127.37979, 536.9249543, 10.63435952, 1.834665661, 24.33146913, 14.6164116, 2559.611622,
    11.01962175, 87.84061636, 0.08, 95.67690107, 205.2980912, 53.84447491, 120.4856467, 11.53529588, 542.5744576,
    57.05425055, 22.21844043, 1352.515128, 222.2093577, 20.21211794, 96.14127127, 13.32544383, 68.002, 89.97556272,
    238.0493565, 1.805146475, 165.2864385, 1.262964651, 1178.645713, 83.06018709, 266.5995808, 468.4816471, 40.95691154,
    31.09509572, 85.67142025, 308.6165641, 1370.386266, 16.39583924, 12.20860139, 305.8479698, 148.484565, 19.19929302,
    485.5545242, 19.81260791, 180.441682, 185.5992317, 420.5659229, 186.3347802, 17.192, 45.47101111, 448.1461918,
    232.1440097, 55.07823606, 44.53868509, 271.8875012, 1327.066419, 8.494956062, 17.89106547, 1703.277974, 183.0620073,
    55.84270724, 8.504138582, 318.3569079, 3.657694029, 77.69060363, 120.4311674, 7.139898373, 34.76559481, 26.58332544,
    336.0065641, 66.25129678, 21.67150577, 495.4198086, 157.2590659, 27.66627416, 112.3516594, 18.0182164, 3.611954681,
    165.7676786, 44.96099764, 52.3438194, 78.95987649, 81.86049237, 41.41721689, 345.7575076, 193.7395, 11.1026663,
    131.2520944, 65.38553504, 59.53732446, 38.41437179, 207.481532, 12.78254046, 172.6272194, 102.8107638, 20.5974781,
    88.40858063, 3.607415769, 0.33, 74.15354215, 4.621165585, 1.044524682, 182.3762759, 186.8094542, 185.4643391,
    328.3366002, 0.02, 1001.389003, 0.2, 0.06, 63.42873435, 305.8495118, 193.0831976, 45.20079548, 407.7773177,
    130.2135384, 87.0437131, 246.5502635, 44.36581216, 209.3632234, 562.2429889, 381.8164458, 146.9172793
]

# # 计算Kendall's Tau相关系数
# tau, p_value = kendalltau(human_tagged_data, effort_score)
# print(f"Kendall's Tau相关系数: {tau}")
# print(f"p-value: {p_value}")

# 计算Spearman相关性
spearman_corr, p_value = spearmanr(standard_scores, author_data)
print("作者的Spearman相关系数:", spearman_corr)
print("p值:", p_value)

spearman_corr, p_value = spearmanr(standard_scores, my_scores_with_comment)
print("我没减少注释得分之前的的Spearman相关系数:", spearman_corr)
print("p值:", p_value)

spearman_corr, p_value = spearmanr(standard_scores, my_scores)
print("我的Spearman相关系数:", spearman_corr)
print("p值:", p_value)

spearman_corr, p_value = spearmanr(standard_scores, my_scores_normal)
print("我标准化后的Spearman相关系数:", spearman_corr)
print("p值:", p_value)
# # 读取 CSV 文件并指定编码为 GBK
# csv_data = pd.read_csv('E:/Postgraduate_study/papers/ASE23ContributionMeasurement-main/ASE23ContributionMeasurement-main/RQ1/tagged/fastjson_result_final_manifest_tagged_eloc.csv', encoding='gbk', header=None)
# 计算Kendall's Tau相关系数
# tau, p_value = kendalltau(human, cvalue)
# print(f"Kendall's Tau相关系数: {tau}")
# print(f"p-value: {p_value}")
#
# 计算Spearman相关性
spearman_corr, p_value = spearmanr(human_tagged_data, effort_score)
print("Spearman相关系数:", spearman_corr)
print("p值:", p_value)

# # 指定文件夹路径
# folder_path = 'E:/Postgraduate_study/papers/ASE23ContributionMeasurement-main/ASE23ContributionMeasurement-main/RQ1/tagged/'
#
# # 获取文件夹下所有文件名
# file_names = os.listdir(folder_path)
#
# # 遍历文件名
# for file_name in file_names:
#     # 确保文件是以.csv结尾的
#     if file_name.endswith('.csv'):
#         print("\nData from file:", file_name)
#         # 构建完整的文件路径
#         file_path = os.path.join(folder_path, file_name)
#
#         # 读取 CSV 文件并指定编码为 GBK，同时告诉 Pandas 不将第一行作为列名
#         csv_data = pd.read_csv(file_path, encoding='gbk', header=None)
#
#         # 提取第二列数据并转换为列表
#         human = csv_data.iloc[:, 1].tolist()
#         cvalue = csv_data.iloc[:, 2].tolist()
#         # 计算Kendall's Tau相关系数
#         # tau, p_value = kendalltau(human, cvalue)
#         # print(f"Kendall's Tau相关系数: {tau}")
#         # print(f"p-value: {p_value}")
#
#         # 计算Spearman相关性
#         spearman_corr, p_value = spearmanr(human, cvalue)
#
#         print("Spearman相关系数:", spearman_corr)
#         # print("p值:", p_value)
